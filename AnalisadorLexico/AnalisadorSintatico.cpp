#include <iostream>
#include <vector>
#include <sstream>
#include "Classificador.h"

void Sintatico(std::vector<int> tokens) {
	//						1	2	3	4	5	6	7	8	9	10	11	12	13	14	15	16	17	18	19	20	21	22	23	24	25	26	27	28	29	30	31	32	33	34	35	36	37	38	39	40	41	42	43	44	45	46	47	48
	int parser[32][48] = {
						   {0,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 49
						   {0,	3,	3,	0,	0,	0,	2,	0,	0,	0,	0,	0,	3,	0,	0,	0,	0,	3,	0,	0,	0,	0,	0,	3,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 50
						   {0,	13,	13,	0,	0,	0,	0,	0,	0,	0,	0,	0,	13,	19,	0,	0,	0,	13,	0,	0,	0,	0,	0,	13,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 51
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	31,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 52
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	4,	0,	5,	0,	0,	0,	0,	0,	0,	0 }, // 53
						   {0,	0,	8,	0,	0,	0,	0,	0,	0,	0,	0,	0,	6,	0,	0,	0,	0,	7,	0,	0,	0,	0,	0,	9,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 54
						   {0,	11,	11,	0,	0,	0,	10,	0,	0,	0,	0,	0,	11,	0,	0,	0,	0,	11,	0,	0,	0,	0,	0,	11,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 55
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 56
						   {0,	0,	0,	0,	0,	0,	12,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 57
						   {0,	15,	18,	0,	0,	0,	0,	0,	0,	0,	0,	0,	14,	0,	0,	0,	0,	17,	0,	0,	0,	0,	0,	16,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 58
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	26,	0,	0,	0,	0,	0,	0,	27,	0,	0,	0,	0 }, // 59
						   {0,	0,	0,	0,	20,	21,	22,	23,	0,	24,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	25,	0,	0,	0,	0,	0 }, // 60
						   {0,	28,	28,	0,	0,	0,	0,	0,	0,	0,	0,	0,	28,	0,	0,	0,	0,	28,	0,	0,	0,	0,	0,	28,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 61
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	29,	0,	0,	0,	0,	30,	0,	0,	0,	0,	0 }, // 62
						   {51,	0,	0,	0,	0,	0,	34,	36,	0,	35,	0,	0,	0,	0,	48,	0,	63,	0,	0,	0,	66,	68,	67,	0,	38,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	37,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 63
						   {33,	0,	0,	0,	0,	0,	33,	33,	0,	33,	0,	0,	0,	0,	33,	0,	33,	0,	32,	33,	33,	33,	33,	0,	33,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	32,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 64
						   {0,	0,	0,	0,	73,	73,	73,	73,	0,	73,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	74,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	73,	0,	0,	0,	0 }, // 65
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	39,	0,	0,	0,	0,	39,	40,	0,	0,	0,	0 }, // 66
						   {0,	0,	0,	0,	43,	45,	47,	46,	0,	44,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 67
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	42,	0,	41,	0,	0,	0,	0,	0 }, // 68
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	55,	54,	52,	0,	57,	0,	56,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	53,	0,	0 }, // 69
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	49,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	50,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 70
						   {0,	0,	0,	0,	58,	59,	62,	61,	0,	60,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 71
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	64,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	65,	0 }, // 72
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	70,	0,	0,	0,	0,	0,	69,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 73
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	71,	0,	0,	72,	0,	0,	0,	0,	0,	0,	0 }, // 74
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 75
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 }, // 76
						   {0,	0,	0,	0,	78,	78,	78,	78,	0,	78,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	78,	0,	0,	0,	0 }, // 77
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	75,	0,	0,	0,	0,	0,	0,	0,	77,	0,	0,	0,	0,	76 },// 78
						   {0,	0,	0,	0,	84,	85,	86,	88,	0,	87,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	89,	0,	0,	0,	0 }, // 79
						   {0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	83,	0,	82,	81,	0,	0,	0,	0,	0 } }; // 80

    std::vector<std::vector<int>> gramatica = {
                                                {2, 11, 37, 50, 51, 52, 36},
                                                {7, 53, 39, 54, 38, 55},
                                                {16},
                                                {16},
                                                {41, 7, 53},
                                                {13},
                                                {18},
                                                {3},
                                                {24},
                                                {57, 39, 54, 38, 55},
                                                {16},
                                                {7, 53},
                                                {58, 7, 59, 37, 50, 51, 52, 4, 44, 60, 43, 36, 51},
                                                {13},
                                                {2},
                                                {24},
                                                {18},
                                                {3},
                                                {16},
                                                {5},
                                                {6},
                                                {7},
                                                {8},
                                                {10},
                                                {16},
                                                {16},
                                                {44, 61, 43},
                                                {54, 7, 62},
                                                {38, 54, 7, 62},
                                                {16},
                                                {14, 63, 38, 64, 19},
                                                {16},
                                                {63, 38, 64},
                                                {7, 30, 65},
                                                {10, 30, 65},
                                                {8, 30, 65},
                                                {16},
                                                {25, 7, 66},
                                                {16},
                                                {44, 67, 68, 43},
                                                {16},
                                                {41, 67, 68},
                                                {5},
                                                {10},
                                                {6},
                                                {8},
                                                {7},
                                                {15, 44, 7, 69, 43, 37, 63, 38, 64, 36, 70},
                                                {20, 37, 63, 38, 64, 36},
                                                {16},
                                                {1, 44, 7, 69, 43, 37, 63, 38, 64, 36},
                                                {29, 71},
                                                {46, 71},
                                                {28, 71},
                                                {27, 71},
                                                {33, 71},
                                                {31, 71},
                                                {5},
                                                {6},
                                                {10},
                                                {8},
                                                {7},
                                                {17, 44, 7, 30, 71, 38, 7, 69, 38, 72, 43, 37, 63, 38, 64, 36},
                                                {34, 5},
                                                {47, 5},
                                                {21, 37, 63, 38, 64, 36, 1, 44, 7, 69, 43},
                                                {23, 26, 7},
                                                {22, 12, 73},
                                                {16},
                                                {32, 7, 74, 73},
                                                {16},
                                                {41, 7, 74},
                                                {77, 78},
                                                {25, 7, 66},
                                                {35, 77, 78},
                                                {48, 77, 78},
                                                {16},
                                                {79, 80},
                                                {16},
                                                {42, 79, 80},
                                                {40, 79, 80},
                                                {5},
                                                {6},
                                                {7},
                                                {10},
                                                {8},
                                                {44, 65, 43}
                                               };

    std::vector<int> pilha;

    pilha.push_back(45);

    for (size_t i = 0; i < gramatica[0].size(); ++i) {
        pilha.push_back(gramatica[0][i]);
    }

    for (size_t i = pilha.size(); i > 0; i--) {
        
    }

    std::cout << "pilha ";
    for (size_t i = 0; i < pilha.size(); ++i) {
        std::cout << pilha[i] << " ";
    }
    std::cout << std::endl;

    while (pilha.size() > 0) {

        if (pilha[pilha.size() - 1] == 16) {
            
            pilha.pop_back();

            std::cout << "pilha ";
            for (size_t i = 0; i < pilha.size(); ++i) {
                std::cout << pilha[i] << " ";
            }
            std::cout << std::endl;
        }
        else if (pilha[pilha.size() - 1] < 49) {
            
            if (pilha[pilha.size() - 1] == tokens[tokens.size() - 1]) {

                pilha.pop_back();
                tokens.pop_back();

                std::cout << "pilha ";
                for (size_t i = 0; i < pilha.size(); ++i) {
                    std::cout << pilha[i] << " ";
                }
                std::cout << std::endl;

                std::cout << "tokens ";
                for (size_t i = 0; i < tokens.size(); ++i) {
                    std::cout << tokens[i] << " ";
                }
                std::cout << std::endl;
            }
        }
        else {
            for (int i = 0; i < 48; i++) {
                if (parser[i][pilha[pilha.size() - 1] - 48] == tokens[tokens.size() - 1]) {
                    
                    pilha.pop_back();

                    for (size_t j = 0; j < gramatica[parser[i][pilha[pilha.size() - 1] - 48]].size(); j++) {
                        pilha.push_back(gramatica[parser[i][pilha[pilha.size() - 1] - 48]][j]);
                    }

                    std::cout << "pilha ";
                    for (size_t j = 0; j < pilha.size(); ++j) {
                        std::cout << pilha[j] << " ";
                    }
                    std::cout << std::endl;
                }
            }
        }
    }


}